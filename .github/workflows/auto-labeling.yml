name: Auto-labeling issue
on:
  workflow_call:
    inputs:
      issue-number:
        description: "Issue number"
        required: true
        type: number
      instructions:
        description: "Additional instructions for label selection"
        required: false
        type: string
        default: ""
      model:
        description: "Model to use"
        required: false
        type: string
        default: "o4-mini"
      provider:
        description: "Provider to use"
        required: false
        type: string
        default: "openai"
    secrets:
      personal-access-token:
        description: "Personal Access Token for PR creation"
        required: false
      openai-api-key:
        description: "OpenAI API key"
        required: false
      anthropic-api-key:
        description: "Anthropic API Key"
        required: false
      groq-api-key:
        description: "Groq API Key"
        required: false
      gemini-api-key:
        description: "Gemini API Key"
        required: false
      cohere-api-key:
        description: "Cohere API Key"
        required: false
      openrouter-api-key:
        description: "OpenRouter API Key"
        required: false
      deepseek-api-key:
        description: "Deepseek API Key"
        required: false

jobs:
  label_issue:
    permissions:
      issues: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
          
      - name: Install LangChain CLI
        run: dotnet tool install --global langchain.cli --prerelease

      - name: Prepare prompt
        env:
          GITHUB_TOKEN: ${{ secrets.personal-access-token || secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.openai-api-key }}
          OPENROUTER_API_KEY: ${{ secrets.openrouter-api-key }}
          ANTHROPIC_API_KEY: ${{ secrets.anthropic-api-key }}
          COHERE_API_KEY: ${{ secrets.cohere-api-key }}
          GEMINI_API_KEY: ${{ secrets.gemini-api-key }}
          DEEPSEEK_API_KEY: ${{ secrets.deepseek-api-key }}
          GROQ_API_KEY: ${{ secrets.groq-api-key }}
        run: |
          {
            echo "You work in the ${{ github.repository }} repository on the issue #${{ inputs.issue-number }}"
            echo "Your goal is to update the issue with suitable labels."
            echo "Always retrieve the issue body/comments and the available labels for the repository first."
            echo "Then, select appropriate labels based on the issue content and update the issue accordingly."
            echo "Do not change the issue body or other data."
            if [ -n "${{ inputs.instructions }}" ]; then
              echo "Additional instructions for label selection: ${{ inputs.instructions }}"
            fi
          } > .prompt.md
          
          echo "###################################################"
          echo "PROMPT"
          cat .prompt.md
          echo "###################################################"

          LOG=$(langchain do \
            --debug \
            --tools github[issues] \
            --input-file .prompt.md \
            --provider ${{ inputs.provider }} \
            --model ${{ inputs.model }})
          
          echo "###################################################"
          echo "LOG"
          echo "$LOG"
          echo "###################################################"
