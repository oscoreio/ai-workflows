name: Issue to PR using Devin
on:
  workflow_call:
    inputs:
      issue-number:
        description: "Issue number"
        required: true
        type: number
    secrets:
      devin-api-key:
        description: "Devin API key"
        required: true

jobs:
  create-devin-session:
    permissions:
      issues: write
      pull-requests: write
      contents: write
      
    runs-on: ubuntu-latest
    steps:
      - name: Add eyes reaction to issue
        uses: actions/github-script@v7
        id: add_eyes_reaction
        with:
          script: |
            // Add "eyes" reaction to the issue
            await github.rest.reactions.createForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.issue-number }},
              content: 'eyes'
            });
            
            // Check if "completed" reaction exists and delete it
            const reactions = await github.rest.reactions.listForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ inputs.issue-number }}
            });
            
            for (const reaction of reactions.data) {
              if (reaction.content === 'rocket') {
                // Delete completed reaction
                await github.rest.reactions.deleteForIssue({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: ${{ inputs.issue-number }},
                  reaction_id: reaction.id
                });
              }
            }

      - name: Checkout
        uses: actions/checkout@v4

      - name: Create Devin session
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          issue_data=$(gh issue view ${{ inputs.issue-number }})
          issue_comments=$(gh issue view ${{ inputs.issue-number }} --comments)

          curl --request POST \
            --url https://api.devin.ai/v1/sessions \
            --header "Authorization: Bearer ${{ secrets.devin-api-key }}" \
            --header 'Content-Type: application/json' \
            --data '{
              "prompt": "Fix the issue #${{ inputs.issue-number }} in the repository ${{ github.repository_owner }}/${{ github.repository }} and create a pull request. Use the following context: \n\nIssue data: \n```\n$issue_data\n```\n\nIssue comments: \n```\n$issue_comments\n```",
              "idempotent": true
            }'
